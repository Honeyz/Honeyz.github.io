<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[honeyc's Yst]]></title>
      <url>%2F2016%2F11%2F26%2Fhoney%2F</url>
      <content type="text"><![CDATA[Dillinger Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor. Type some Markdown on the left See HTML in the right Magic You can also: Import and save files from GitHub, Dropbox, Google Drive and One Drive Drag and drop files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site The overriding design goal for Markdown’sformatting syntax is to make it as readableas possible. The idea is that aMarkdown-formatted document should bepublishable as-is, as plain text, withoutlooking like it’s been marked up with tagsor formatting instructions. This text you see here is actually written in Markdown! To get a feel for Markdown’s syntax, type some text into the left window and watch the results in the right. TechDillinger uses a number of open source projects to work properly: AngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I/O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system keymaster.js - awesome keyboard handler lib by @thomasfuchs jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub. InstallationDillinger requires Node.js v4+ to run. Download and extract the latest pre-built release. Install the dependencies and devDependencies and start the server. 123$ cd dillinger$ npm install -d$ node app For production environments… 123$ npm install --production$ npm run predeploy$ NODE_ENV=production node app PluginsDillinger is currently extended with the following plugins Dropbox Github Google Drive OneDrive Readmes, how to use them in your own application can be found here: plugins/dropbox/README.md plugins/github/README.md plugins/googledrive/README.md plugins/onedrive/README.md DevelopmentWant to contribute? Great! Dillinger uses Gulp + Webpack for fast developing.Make a change in your file and instantanously see your updates! Open your favorite Terminal and run these commands. First Tab:1$ node app Second Tab:1$ gulp watch (optional) Third:1$ karma start Building for sourceFor production release:1$ gulp build --prod Generating pre-built zip archives for distribution:1$ gulp build dist --prod DockerDillinger is very easy to install and deploy in a Docker container. By default, the Docker will expose port 80, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image. 12cd dillingernpm run-script build-docker This will create the dillinger image and pull in the necessary dependencies. Moreover, this uses a hack to get a more optimized npm build by copying the dependencies over and only installing when the package.json itself has changed. Look inside the package.json and the Dockerfile for more details on how this works. Once done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 80 of the Docker (or whatever port was exposed in the Dockerfile): 1docker run -d -p 8000:8080 --restart="always" &lt;youruser&gt;/dillinger:latest Verify the deployment by navigating to your server address in your preferred browser. 1127.0.0.1:8000 Kubernetes + Google CloudSee KUBERNETES.md docker-compose.ymlChange the path for the nginx conf mounting path to your full path, not mine! N|Solid and NGINXMore details coming soon. Todos Write Tests Rethink Github Save Add Code Comments Add Night Mode LicenseMIT Free Software, Hell Yeah!]]></content>
    </entry>

    
  
  
</search>
